

let {...} = import("./common/grammar");
let {...} = import("./common/tree");
let {...} = import("./larkish/larkish");

var larky = larkish();

export class Parser {
  public var mode: String;
  private grammar: Grammar;

  public constructor(src: String): Void {
    mode = "rec";
    var tree = larky.charEarley("Grammar").trees(src)[0];
    grammar = toGrammar(tree);
  }

  public parse(str: String): Tree | Bubble {
    match (mode) {
      "rec" -> return grammar.rec("__start__").trees(str)[0];
      "earley" -> return grammar.charEarley("__start__").trees(str)[0];
      "lexer-earley" -> return grammar.lexerEarley("__start__").trees(str)[0];
      "lexer" -> return grammar.lexer().trees(str)[0];
      else -> return bubble();
    }
  }
}
